tax$Kingdom)
head(tax)
asv_matrix <- merge(x = asv_table, y = tax, by = "Feature.ID")
head(asv_matrix)
# Column Feature.ID as rownames in the asv_table
rownames(asv_table) <- asv_table$Feature.ID
asv_table %<>% select(-Feature.ID)
asv_table
# Column Feature.ID as rownames in the df taxonomy
rownames(tax) <- tax$Feature.ID
asv_matrix %<>%
select(-Feature.ID) %>%
as.matrix(.) # Convert to a matrix
asv_matrix
tax %>%
select(-Feature.ID) %>%
as.matrix(.) # Convert to a matrix
tax %<>%
select(-Feature.ID) %>%
as.matrix(.) # Convert to a matrix
ASV <- otu_table(asv_table, taxa_are_rows = TRUE)
TAX <- tax_table(tax)
metadata <- sample_data(metadata)
phy_tree <- read_tree("datasets/tree.nwk")
phy_tree <- read_tree("../datasets/tree.nwk")
phyloseq_object <- phyloseq(OTU, TAX, metadata, phy_tree)
phyloseq_object <- phyloseq(ASV, TAX, metadata, phy_tree)
phyloseq_object
asv_matrix <- merge(x = asv_table, y = tax, by = "Feature.ID")
tax %<>%
select(-Confidence) %>%
separate(Taxon, c("Kingdom", "Phylum"), sep = "; p__") %>%
separate(Phylum, c("Phylum", "Class"), sep = "; c__") %>%
separate(Class, c("Class", "Order"), sep = "; o__") %>%
separate(Order, c("Order", "Family"), sep = "; f__") %>%
separate(Family, c("Family", "Genus"), sep = "; g__") %>%
separate(Genus, c("Genus", "Specie"), sep = "; s__") %>%
mutate_all(na_if,"")
tax <- read.table("../datasets/taxonomy.tsv", sep = '\t', header = T)
colnames(tax)
tax %<>%
select(-Confidence) %>%
separate(Taxon, c("Kingdom", "Phylum"), sep = "; p__") %>%
separate(Phylum, c("Phylum", "Class"), sep = "; c__") %>%
separate(Class, c("Class", "Order"), sep = "; o__") %>%
separate(Order, c("Order", "Family"), sep = "; f__") %>%
separate(Family, c("Family", "Genus"), sep = "; g__") %>%
separate(Genus, c("Genus", "Specie"), sep = "; s__") %>%
mutate_all(na_if,"")
tax$Kingdom <- sub (pattern = "d__", replacement = "",
tax$Kingdom)
head(tax)
asv_matrix <- merge(x = asv_table, y = tax, by = "Feature.ID")
library(tidyverse)
library(magrittr)
asv_table <- read.table("../datasets/feature-table.tsv", sep = "\t")
head(asv_table)
metadata <- read.csv("../datasets/sample-metadata.csv", row.names = 1)
sample.names <- rownames(metadata)
colnames(asv_table) <- c("Feature.ID", sample.names)
head(asv_table)
tax <- read.table("../datasets/taxonomy.tsv", sep = '\t', header = T)
colnames(tax)
tax %<>%
select(-Confidence) %>%
separate(Taxon, c("Kingdom", "Phylum"), sep = "; p__") %>%
separate(Phylum, c("Phylum", "Class"), sep = "; c__") %>%
separate(Class, c("Class", "Order"), sep = "; o__") %>%
separate(Order, c("Order", "Family"), sep = "; f__") %>%
separate(Family, c("Family", "Genus"), sep = "; g__") %>%
separate(Genus, c("Genus", "Specie"), sep = "; s__") %>%
mutate_all(na_if,"")
tax$Kingdom <- sub (pattern = "d__", replacement = "",
tax$Kingdom)
head(tax)
asv_matrix <- merge(x = asv_table, y = tax, by = "Feature.ID")
head(asv_matrix)
ps <- saveRDS(phyloseq_object, "../datasets/phyloseq_object.RDS")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(magrittr)
total.seqs <- read.table("../datasets/denoising-stats.tsv", sep = '\t', header = TRUE)
names(total.seqs)
phy <- read.csv("../datasets/level-2.csv", header = TRUE)
head(phy$index, 10)
head(colnames(phy))
tail(colnames(phy))
phy %<>%
select(-c(sample_type, site))
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
head(relative.abundance.phy[1:5], 5)
rownames(relative.abundance.phy) <- phy$index
head(relative.abundance.phy[1:5], 5)
source("../scripts/fun_relative_abundance.R")
phy.filtered <- filter_abundances(relative.abundance.phy, 0.10)
head(phy.filtered[1:5], 5)
phy.data <-  phy.filtered %>%
rownames_to_column(var = "ID") %>%
separate(ID, c("Domain", "Phylum"), sep = ".p__") %>%
select(-Domain)
head(phy.data[1:6], 5)
phy.data %>%
select(-Phylum) %>%
summarise_all(sum)
source("../scripts/fun_relative_abundance.R")
phy.data1 <- other_row(phy.data, 1)
head(phy.data1[1:5], 10)
phy.names <- phy.data1$Phylum
phy.data1$Phylum <- factor(phy.data1$Phylum, levels = rev(phy.names))
my_colors <- c("#CBCDCC", "#CB7C95", "#8C97BA", "#97895E", "#388894",
"#83A8EC", "#568259", "#97D274", "#4281A4", "#F9DC5C")
taxbarplot <- phy.data1 %>%
pivot_longer(cols = (2:length(colnames(.)))) %>%
ggplot(aes(x = name, y = value, fill = Phylum)) +
scale_fill_manual(values = my_colors) +
geom_bar(stat = "identity", position = "stack", color = "white") +
theme(
axis.text.x = element_text(angle = 90)
) +
labs(
x = "Sample",
y = "Relative abundance"
)
taxbarplot
total.seqs %<>%
select(sample.id, non.chimeric) %>%
arrange()
head(total.seqs)
total.seqs %<>%
select(sample.id, non.chimeric) %>%
arrange()
head(total.seqs)
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
relative.abundance.phy
dim(total.seqs)
head(total.seqs)
head(phy$index)
phy <- read.csv("../datasets/level-2.csv", header = TRUE)
head(phy$index)
phy$index
head(phy.filtered[1:5], 5)
phy.data <-  phy.filtered %>%
rownames_to_column(var = "ID") %>%
separate(ID, c("Domain", "Phylum"), sep = ".p__") %>%
select(-Domain)
head(phy.data[1:6], 5)
dim(phy.data)
?colSums
colSums(phy.data[2:])
colSums(phy.data[,2:])
colSums(phy.data)
head(p
head(phy.data[1:6], 5)
head(phy.data[1:6], 5)
colSums(phy.data[1:])
colSums(phy.data[,1:])
colSums(phy.data[-1])
rwSums(phy.data[-1])
rowSums(phy.data[-1])
options(scipen = 9999)
rowSums(phy.data[-1])
source("../scripts/fun_relative_abundance.R")
phy.data1 <- other_row(phy.data, 1)
head(phy.data1[1:5], 10)
colSums(phy.data[-1])
dim(phy.data)
dim(phy.filtered)
source("../scripts/fun_relative_abundance.R")
phy.filtered <- filter_abundances(relative.abundance.phy, 0.10)
head(phy.filtered[1:5], 5)
dim(phy.filtered)
phy.data <-  phy.filtered %>%
rownames_to_column(var = "ID") %>%
separate(ID, c("Domain", "Phylum"), sep = ".p__") %>%
select(-Domain)
head(phy.data[1:6], 5)
rownames(relative.abundance.phy) <- phy$index
head(relative.abundance.phy[1:5], 5)
source("../scripts/fun_relative_abundance.R")
phy.filtered <- filter_abundances(relative.abundance.phy, 0.10)
head(phy.filtered[1:5], 5)
dim(phy.filtered)
phy.data <-  phy.filtered %>%
rownames_to_column(var = "ID") %>%
separate(ID, c("Domain", "Phylum"), sep = ".p__") %>%
select(-Domain)
head(phy.data[1:6], 5)
options(scipen = 9999)
colSums(phy.data[-1])
source("../scripts/fun_relative_abundance.R")
phy.data.other <- other_row(phy.data, 1)
head(phy.data1[1:5], 10)
phy.names <- phy.data1$Phylum
phy.data1$Phylum <- factor(phy.data1$Phylum, levels = rev(phy.names))
my_colors <- c("#CBCDCC", "#CB7C95", "#8C97BA", "#97895E", "#388894",
"#83A8EC", "#568259", "#97D274", "#4281A4", "#F9DC5C")
taxbarplot <- phy.data1 %>%
pivot_longer(cols = (2:length(colnames(.)))) %>%
ggplot(aes(x = name, y = value, fill = Phylum)) +
scale_fill_manual(values = my_colors) +
geom_bar(stat = "identity", position = "stack", color = "white") +
theme(
axis.text.x = element_text(angle = 90)
) +
labs(
x = "Sample",
y = "Relative abundance"
)
taxbarplot
phy.names <- phy.data.other$Phylum
phy.data.other$Phylum <- factor(phy.data.other$Phylum, levels = rev(phy.names))
my_colors <- c("#CBCDCC", "#CB7C95", "#8C97BA", "#97895E", "#388894",
"#83A8EC", "#568259", "#97D274", "#4281A4", "#F9DC5C")
taxbarplot <- phy.data1 %>%
pivot_longer(cols = (2:length(colnames(.)))) %>%
ggplot(aes(x = name, y = value, fill = Phylum)) +
scale_fill_manual(values = my_colors) +
geom_bar(stat = "identity", position = "stack", color = "white") +
theme(
axis.text.x = element_text(angle = 90)
) +
labs(
x = "Sample",
y = "Relative abundance"
)
taxbarplot
phy.names <- phy.data.other$Phylum
phy.data.other$Phylum <- factor(phy.data.other$Phylum, levels = rev(phy.names))
my_colors <- c("#CBCDCC", "#CB7C95", "#8C97BA", "#97895E", "#388894",
"#83A8EC", "#568259", "#97D274", "#4281A4", "#F9DC5C")
taxbarplot <- phy.data.other %>%
pivot_longer(cols = (2:length(colnames(.)))) %>%
ggplot(aes(x = name, y = value, fill = Phylum)) +
scale_fill_manual(values = my_colors) +
geom_bar(stat = "identity", position = "stack", color = "white") +
theme(
axis.text.x = element_text(angle = 90)
) +
labs(
x = "Sample",
y = "Relative abundance"
)
taxbarplot
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
head(relative.abundance.phy[1:5], 5)
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
source("../scripts/fun_relative_abundance.R")
relative.abundance.phy <- rel_ab(phy, total.seqs, 1, 1)
ruta <- "/Volumes/GoogleDrive-115690466641262167238/My Drive/programming/repositorios_github/16SrRNA_FromQIIME2_ToR/datasets"
setwd(ruta)
getwd()
list.files()
obs <- read.csv("observed_features.csv")
head(obs)
colnames(obs)
pivot_longer(., cols = 2:101, names_to = "depth", values_to = "sequences")
obs %>%
select(samp_id) %>%
pivot_longer(., cols = 2:101, names_to = "depth", values_to = "sequences")
obs %>%
select(sample_id) %>%
pivot_longer(., cols = 2:101, names_to = "depth", values_to = "sequences")
obs
obs %>%
select(-sample_id) %>%
pivot_longer(., cols = 2:101, names_to = "depth", values_to = "sequences")
obs %>%
select(-sample_id) %>%
pivot_longer(., cols = 2:100, names_to = "depth", values_to = "sequences")
obs %>%
select(-sample_id) %>%
pivot_longer(., cols = 1:100, names_to = "depth", values_to = "sequences")
obs %>%
pivot_longer(., cols = 2:100, names_to = "depth", values_to = "sequences")
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences")
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.")
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "Depth"))
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
select(-c(depth, iter))
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.")
obs
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "sequences") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
select(-c(depth, iter))
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "asvs") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
select(-c(depth, iter))
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "asvs") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
select(-c(depth))
rarefy <- function(df, var1, var2) {
var1 <- enquo(var1); var2 <- enquo(var2);
df %<>% group_by(!!var1) %>%
dplyr::summarise(mean = mean(!!var2),
sd = sd(!!var2))
}
obs %>%
pivot_longer(., cols = 2:101,  names_to = "depth", values_to = "asvs") %>%
separate(depth, c("depth", "iter"), sep = "_iter.") %>%
separate(depth, c("depth", "depth_seqs")) %>%
select(-c(depth)) -> obs_long
obs_long
map_df(obs, rarefy(var1 = depth_seqs, var2 = asvs))
map_df(obs_long, rarefy(var1 = depth_seqs, var2 = asvs))
map_df(obs_long, rarefy(., var1 = depth_seqs, var2 = asvs))
obs_nest <- obs_long %>%
group_by(depth_seqs) %>%
nest
obs_nest <- obs_long %>%
group_by(depth_seqs) %>%
nest()
obs_nest
obs_nest$data[[1]]
data %>%
summarize(mean_asv = asvs)
asvs_mean <- function(data) {
data %>%
summarize(mean_asv = asvs)
}
obs_nest %>%
map_dbl(.x = data, .f = asvs_mean)
obs_nest %>%
mutate(Mean_ASV = map_dbl(.x = data, .f = asvs_mean))
data %>%
select(asvs) %>%
summarize(mean_asv = asvs)
asvs_mean <- function(data) {
data %>%
select(asvs) %>%
summarize(mean_asv = asvs)
}
obs_nest %>%
mutate(Mean_ASV = map_dbl(.x = data, .f = asvs_mean))
asvs_mean <- function(data) {
data %>%
select(asvs) %>%
summarize(mean_asv = asvs) %>%
pull(mean_asv)
}
obs_nest %>%
mutate(Mean_ASV = map_dbl(.x = data, .f = asvs_mean))
obs_nest %>%
mutate(mean_asv = map_dbl(.x = data, .f = asvs_mean))
obs_long
obs_nest <- obs_long %>%
group_by(depth_seqs) %>%
nest()
obs_nest$data[[1]]
obs_nest <- obs_long %>%
group_by(depth_seqs, site) %>%
nest()
obs_nest$data[[1]]
obs_nest
asvs_mean <- function(data) {
data %>%
select(asvs) %>%
summarize(mean_asv = asvs) %>%
pull(mean_asv)
}
obs_nest %>%
mutate(mean_asv = map_dbl(.x = data, .f = asvs_mean))
obs_nest %>%
mutate(mean_asv = map_dbl(.x = data, .f = asvs_mean))
obs_nest <- obs_long %>%
group_by(depth_seqs, site) %>%
nest()
obs_nest$data[[1]]
data %>%
select(asvs) %>%
summarize(mean_asv = mean(asvs)) %>%
pull(mean_asv)
asvs_mean <- function(data) {
data %>%
select(asvs) %>%
summarize(mean_asv = mean(asvs)) %>%
pull(mean_asv)
}
obs_nest %>%
mutate(mean_asv = map_dbl(.x = data, .f = asvs_mean))
obs_nest %>%
mutate(mean_asv = map_dbl(.x = data, .f = asvs_mean)) -> obs2
obs2 %>%
select(data) %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = site)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
obs2
obs2 %>%
select(-data) %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = site)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
obs2 %>%
select(-data)
obs2 %<>%
select(-data)
obs2$depth_seqs <- sapply(obs2$depth_seqs, as.numeric)
obs2
obs2 %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = site)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
source("../scripts/funs_rarefy2.R")
obs_long <- clean_data(obs)
head(obs_long)
obs_nest <- obs_long %>%
group_by(depth_seqs, site) %>%
nest()
head(obs_nest)
class(obs_nest)
obs_nest$data[[1]]
source("../scripts/funs_rarefy2.R")
source("../scripts/funs_rarefy2.R")
head(obs_mean)
obs_mean <- mutate(
obs_nest, mean_asv = map_dbl(.x = data, .f = asvs_mean)
) %>%
select(-data)
obs_mean$depth_seqs <- sapply(obs_mean$depth_seqs, as.numeric)
head(obs_mean)
obs_mean %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = site)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
obs_sample <- obs_long %>%
group_by(depth_seqs) %>%
nest()
obs_mean_sample <- mutate(
obs_sample, mean_asv = map_dbl(.x = data, .f = asvs_mean)
) %>%
select(-data)
# Convert depth_seqs in a numeric variable
obs_mean_sample$depth_seqs <- sapply(obs_mean_sample$depth_seqs, as.numeric)
head(obs_mean_sample)
obs_long
obs_sample <- obs_long %>%
group_by(depth_seqs, sample_id) %>%
nest()
obs_mean_sample <- mutate(
obs_sample, mean_asv = map_dbl(.x = data, .f = asvs_mean)
) %>%
select(-data)
obs_mean_sample <- mutate(
obs_sample, mean_asv = map_dbl(.x = data, .f = asvs_mean)
) %>%
select(-data)
# Convert depth_seqs in a numeric variable
obs_mean_sample$depth_seqs <- sapply(obs_mean_sample$depth_seqs, as.numeric)
head(obs_mean_sample)
# plot
obs_mean_sample %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = site)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
# plot
obs_mean_sample %>%
ggplot(aes(x = depth_seqs,
y = mean_asv,
color = sample_id)) +
geom_line() +
geom_point(alpha = 0.5) +
theme_bw()
---
title: "Rarefy clean data and plot"
author: "Luis-Vargas, Maira N."
output: github_document
---
